//this route is only for development purpose
const mongoose = require('mongoose');
const { ObjectID } = require('mongodb');

const login = require('../middlewares/login');
const validOID = require('../middlewares/valid');

const Form = mongoose.model('form');

module.exports = app => {
    app.get('/test', (req, res) => {
        res.send('If you are seeing this, then this works!');
    });

    app.post('/test', (req, res) => {
        res.send('If you are seeing this, then this works!');
    });

    app.post('/test/:fid/questions', login, validOID, async (req, res) => {
        const dummy = [
            {
                options: [],
                _id: new ObjectID(),
                title: 'Nan Zhu Jiao',
                description: 'Generated by Test API',
                validation:
                    '{"isRequired":false,"minCharCount":"","maxCharCount":""}',
                sequence: 1,
                connect: '',
                type: 'LONG_TEXT'
            },
            {
                options: [],
                _id: new ObjectID(),
                title: 'Nv Zhu Jiao',
                description: 'Generated by Test API',
                validation:
                    '{"isRequired":false,"minCharCount":"","maxCharCount":""}',
                sequence: 2,
                connect: '',
                type: 'LONG_TEXT'
            },
            {
                options: [
                    'Bei Tai Yi Hao',
                    'Bei Tai Er Hao',
                    'Bei Tai San Hao',
                    'Zai Jian Qian Ren'
                ],
                _id: new ObjectID(),
                title: 'Bei Tai Nan',
                description: 'Generated by Test API (4 Options)',
                validation:
                    '{"isRequired":false,"minCharCount":"","maxCharCount":""}',
                sequence: 3,
                connect: '',
                type: 'LONG_TEXT'
            },
            {
                options: ['Satu Lipa', 'Dua Lipa', 'Three Lipa'],
                _id: new ObjectID(),
                title: 'Bei Tai Nv',
                description: 'Generated by Test API (3 Options)',
                validation:
                    '{"isRequired":false,"minCharCount":"","maxCharCount":""}',
                sequence: 4,
                connect: '',
                type: 'LONG_TEXT'
            }
        ];

        const form = await Form.findOneAndUpdate(
            { _id: req.params.fid },
            { $set: { questions: dummy } }
        );

        res.send(form);
    });

    app.delete('/test/:fid/questions', login, validOID, async (req, res) => {
        const form = await Form.findOneAndUpdate(
            { _id: req.params.fid },
            { $set: { questions: [] } },
            { new: true }
        );

        res.send(form);
    });

    app.get('/test/:fid/questions', login, validOID, async (req, res) => {
        const form = await Form.findById(req.params.fid);
        res.send(form.questions);
    });
};

/*
    function 1: add questions
*/
